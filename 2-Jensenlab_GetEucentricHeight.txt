ScriptName GetEucentricHeight

ReportNavItem
NavItem = $reportedValue1
Echo Measuring Eucentricity in both directions on Item # $NavItem
#### USER INPUTS #####
useSmallArea = 1 # Enter 1 to use a smaller camera area for improved accuracy (K3 only).
#### Z ADJUSTMENT INPUTS #####
P1stepnum = 2 # Number of measurements for fitting in phase 1.
P1stepsize = -3 # Interval between phase 1 measurements (microns).
P2stepnum = 2 # Number of measurements for fitting in phase 2.
P2stepsize = -2 # Interval between phase 2 measurements (microns).
phase1tilt = 15 # Tilt angle during rough alignment.
phase2tilt = 45 # Tilt angle during fine alignment.
#### EXPOSURE ADJUSTMENT INPUTS ####
ViewExposure := 0.1 # Initial exposure time for View.
Zerotargetview := 50 # Target mean count for 0 degree tilt image taken with View.
P1targetview := 80 # Target mean count for phase 1 View parameter.
P2targetview := 150 # Target mean count for phase 2 View parameter.
###################################

ResetClock 
Echo Running FISE Eucentricity...
TiltTo 0
SetExposure 0 $ViewExposure
RealignToNavItem 0
# Adjust View Exposure
Echo Adjusting exposure...
If $useSmallArea == 1
   SetCameraArea 0 1500 4260 1200 2892
Endif
View
ElectronStats A
viewmean = $reportedValue3
ZeroView := $ViewExposure * $Zerotargetview / $viewmean
P1View := $ViewExposure * $P1targetview / $viewmean
P2View := $ViewExposure * $P2targetview / $viewmean
Echo Setting View exposure to $ZeroView
SetExposure 0 $ZeroView
View
ElectronStats A
Copy A P
ResetImageShift

### PHASE 1 ###
Echo Phase 1: Rough alignment - At $phase1tilt degrees
TiltTo $phase1tilt
num = 1
Echo Setting View exposure to $P1View
SetExposure 0 $P1View
Vmovenum = $P1stepnum / 1.5
Vpremove = $P1stepsize * $Vmovenum * -1
MoveStage 0 0 $Vpremove
Loop $P1stepnum
 MoveStage 0 0 $P1stepsize
 ReportStageXYZ
 Zvalue = $reportedValue3
 View
 AlignTo P
 ReportStageXYZ
 ReportImageShift
 XYShift = SQRT ($reportedValue1 * $reportedValue1 + $reportedValue2 * $reportedValue2)
 SetImageShift 0 0
      If $reportedValue2 < 0
         x$num = $XYShift
      Else
         x$num = $XYShift * -1
      EndIf
      y$num = $Zvalue
      num = $num + 1
 EndLoop 

# Calculate mean of X and Y values for View
   Xavg = 0
   Yavg = 0
   num = 1
   Loop $P1stepnum
      Xavg = $Xavg + $x$num
      Yavg = $Yavg + $y$num
      num = $num + 1
   EndLoop      
   Xavg = $Xavg / $P1stepnum
   Yavg = $Yavg / $P1stepnum

# Calculate slope
   top = 0 #Numerator
   bot = 0 #Denominator
   num = 1
   Loop $P1stepnum
      top = $top + (( $x$num - $Xavg ) * ( $y$num - $Yavg ))
      bot = $bot + (( $x$num - $Xavg ) * ( $x$num - $Xavg ))
      num = $num + 1
   EndLoop 
  If $bot >= -0.0001 AND $bot <= 0.0001  
   Echo Warning: Signal may be too low!
   bot = 0.001
  Endif 
   slope = $top / $bot
# Calculate intercept
TargetZ =  $Yavg - $slope * $Xavg
ReportStageXYZ 
CurrentZ = $reportedValue3
DeltaZ1 = $TargetZ - $CurrentZ
DeltaZ2 = $DeltaZ1 + 0.5 # For stage backlash in Z

Echo Phase 1: Found a eucentric height of $TargetZ, moving by $DeltaZ1 to target Z
MoveStage 0 0 $DeltaZ2
MoveStage 0 0 -0.5
Echo Echo Finished Phase 1!

### PHASE 2 ###
Echo Phase 2: Tilt to $phase2tilt degrees
SetCameraArea 0 2013 3747 1179 2913
Echo Setting View exposure to $P2View
SetExposure 0 $P2View
TiltTo $phase2tilt
num = 1
View
ElectronStats A
Copy A R
Vmovenum = $P2stepnum / 1.5
Vpremove = $P2stepsize * $Vmovenum * -1
MoveStage 0 0 $Vpremove
Loop $P2stepnum
 MoveStage 0 0 $P2stepsize
 ReportStageXYZ
 Zvalue = $reportedValue3
 View
 AlignTo R
 ReportStageXYZ
 ReportImageShift
 XYShift = SQRT ($reportedValue1 * $reportedValue1 + $reportedValue2 * $reportedValue2)
  Echo XYSHIFT IS $XYShift 
 SetImageShift 0 0
      If $reportedValue2 < 0
         x$num = $XYShift
      Else
         x$num = $XYShift * -1
      EndIf
      y$num = $Zvalue
      num = $num + 1
 EndLoop 

# Calculate mean of X and Y values for View
   Xavg = 0
   Yavg = 0
   num = 1
   Loop $P2stepnum
      Xavg = $Xavg + $x$num
      Yavg = $Yavg + $y$num
      num = $num + 1
   EndLoop      
   Xavg = $Xavg / $P1stepnum
   Yavg = $Yavg / $P1stepnum

# Calculate slope
   top = 0 #Numerator
   bot = 0 #Denominator
   num = 1
   Loop $P2stepnum
      top = $top + (( $x$num - $Xavg ) * ( $y$num - $Yavg ))
      bot = $bot + (( $x$num - $Xavg ) * ( $x$num - $Xavg ))
      num = $num + 1
   EndLoop 
  If $bot >= -0.0001 AND $bot <= 0.0001  
   Echo Warning: Signal may be too low!
   bot = 0.001
  Endif 
   slope = $top / $bot
# Calculate intercept
TargetZ1 =  $Yavg - $slope * $Xavg
ReportStageXYZ 
CurrentZ = $reportedValue3
DeltaZ1 = $TargetZ1 - $CurrentZ
DeltaZ2 = $DeltaZ1 + 0.5 # For stage backlash in Z

Echo At $phase2tilt: Found a eucentric height of $TargetZ1, moving by $DeltaZ1 to target Z
MoveStage 0 0 $DeltaZ2
MoveStage 0 0 -0.5

phase2tilt = $phase2tilt * -1
Echo Phase 2: Tilt to $phase2tilt degrees
TiltTo $phase2tilt
num = 1
View
Copy A R
Vmovenum = $P2stepnum / 1.5
Vpremove = $P2stepsize * $Vmovenum * -1
MoveStage 0 0 $Vpremove
Loop $P2stepnum
 MoveStage 0 0 $P2stepsize
 ReportStageXYZ
 Zvalue = $reportedValue3
 View
 AlignTo R
 ReportStageXYZ
 ReportImageShift
 XYShift = SQRT ($reportedValue1 * $reportedValue1 + $reportedValue2 * $reportedValue2)
 Echo XYSHIFT IS $XYShift 
 SetImageShift 0 0
      If $reportedValue2 < 0
         x$num = $XYShift
      Else
         x$num = $XYShift * -1
      EndIf
      y$num = $Zvalue
      num = $num + 1
 EndLoop 

# Calculate mean of X and Y values for View
   Xavg = 0
   Yavg = 0
   num = 1
   Loop $P2stepnum
      Xavg = $Xavg + $x$num
      Yavg = $Yavg + $y$num
      num = $num + 1
   EndLoop      
   Xavg = $Xavg / $P2stepnum
   Yavg = $Yavg / $P2stepnum

# Calculate slope
   top = 0 #Numerator
   bot = 0 #Denominator
   num = 1
   Loop $P2stepnum
      top = $top + (( $x$num - $Xavg ) * ( $y$num - $Yavg ))
      bot = $bot + (( $x$num - $Xavg ) * ( $x$num - $Xavg ))
      num = $num + 1
   EndLoop 
  If $bot >= -0.0001 AND $bot <= 0.0001  
   Echo Warning: Signal may be too low!
   bot = 0.001
  Endif 
   slope = $top / $bot

# Calculate intercept
TargetZ2 =  $Yavg - $slope * $Xavg
Echo Phase 2: Found a eucentric height of $TargetZ2

ReportStageXYZ
CurrentZ = $reportedValue3
Zavg = ($TargetZ1 + $TargetZ2) / 2
DeltaZ1 = $Zavg - $CurrentZ
DeltaZ2 = $DeltaZ1 + 0.5 # For stage backlash in Z
TiltTo 0
Echo Final Z is $Zavg, moving by $DeltaZ1 to target Z-height.
MoveStage 0 0 $DeltaZ2
MoveStage 0 0 -0.5
Echo Finished Phase 2!
difference = $TargetZ2 - $TargetZ1

UpdateItemZ
Echo Setting View exposure to $ZeroView
SetExposure 0 $ZeroView
View
AlignTo P
SetCameraArea 0 F
ReportClock
Echo Nav Item $NavItem: Found a eucentric height of $Zavg in $reportedValue1
